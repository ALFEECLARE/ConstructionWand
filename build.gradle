buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "${mcversion}-${version_major}.${version_minor}"
group = "${author}.${modid}"
archivesBaseName = "${modid}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: project.mcp_mappings

    runs {
        client {
            workingDirectory project.file("run/client").canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                constructionwand {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("run/server").canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                constructionwand {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("run/client").canonicalPath

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', archivesBaseName, '--all',
                    '--existing', '"' + file('src/main/resources/') + '"',
                    '--existing', '"' + file('src/generated/resources/') + '"',
                    '--output', '"' + file('src/generated/resources/') + '"'

            mods {
                constructionwand {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    maven {
        url = "https://maven.blamejared.com"
    }
    maven {
        url = "https://maven.theillusivec4.top/"
    }
}

dependencies {
    minecraft([
            group  : "net.minecraftforge",
            name   : "forge",
            version: "${project.mcversion}-${project.forgeversion}"
    ])
    /*
    compileOnly fg.deobf([
            group: "vazkii.botania",
            name: "Botania",
            version: "${project.botania}",
            classifier: "api"
    ])*/

    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.14.4-1.1-25.135")
    runtimeOnly fg.deobf("top.theillusivec4.curios:curios:FORGE-1.14.4-1.0.6.1")

    compileOnly fg.deobf("vazkii.botania:Botania:r1.11-379.354:api")
    runtimeOnly fg.deobf("vazkii.botania:Botania:r1.11-379.354")
}

jar {
    manifest {
        attributes([
                "Specification-Title": archivesBaseName,
                "Specification-Vendor": "${author}",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": archivesBaseName,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"${author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}